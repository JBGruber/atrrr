[{"path":"https://jbgruber.github.io/atrrr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 atrrr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Basic Usage","text":"Welcome atrrr vignette! guide delve deeper functionalities offered package- diving , let’s clarify terminology. context Blue Sky, post referred “skeet.” , mention retrieving working “skeets,” talking individual posts made Blue Sky. Now, let’s delve deeper functionalities allow users interact skeets, followers, descriptions.","code":""},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Basic Usage","text":"haven’t done , can install development version atrrr like (pak works similar remotes , ’s cool kids use now :grin:):","code":"# install.packages(\"pak\") pak::pak(\"JBGruber/atrrr\")"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"load-the-package","dir":"Articles","previous_headings":"Introduction","what":"Load the package","title":"Basic Usage","text":"","code":"library(atrrr)"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"authentication","dir":"Articles","previous_headings":"Introduction","what":"Authentication","title":"Basic Usage","text":"first time make request, prompted automatically enter user handle app password authenticate atrrr communicate BlueSky . page generate app passwords also automatically opened . However, can also trigger process manually: can useful want replace old token permanently stored encrypted disk.","code":"auth(\"jbgruber.bsky.social\")"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"searching-posts","dir":"Articles","previous_headings":"","what":"Searching Posts","title":"Basic Usage","text":"protocol defines search function app.bsky.feed.searchPosts, however, currently active, far tell. soon functionality added BlueSky, implement .","code":""},{"path":[]},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"retrieve-user-info-get_user_info","dir":"Articles","previous_headings":"Blue Sky Users and Skeets","what":"Retrieve user info (get_user_info)","title":"Basic Usage","text":"good starting point understanding user’s digital footprint platform. get_user_info function becomes handy tool, fetching array information user. need? handle! function gives us counts followers, follows, posts user. can also retrieve information multiple users providing vector user handles:","code":"get_user_info(actor = \"atpr.bsky.social\")  |>   dplyr::glimpse() #> Rows: 1 #> Columns: 8 #> $ did               <chr> \"did:plc:j42kj4qc5vfz34… #> $ indexed_at        <dttm> 1-01-01 #> $ actor_handle      <chr> \"atpr.bsky.social\" #> $ actor_name        <chr> NA #> $ actor_description <chr> NA #> $ actor_avatar      <chr> NA #> $ viewer_data       <list> [FALSE, FALSE, \"at://d… #> $ labels_data       <list> [] get_user_info(actor = c(\"benguinaudeau.bsky.social\", \"atpr.bsky.social\"))  |>   dplyr::glimpse() #> Rows: 2 #> Columns: 8 #> $ did               <chr> \"did:plc:vuvsifrusnjsys… #> $ indexed_at        <dttm> 2024-01-26 01:28:47, 1… #> $ actor_handle      <chr> \"benguinaudeau.bsky.soc… #> $ actor_name        <chr> \"Benjamin Guinaudeau\", … #> $ actor_description <chr> \"Postdoc @CSMaP_NYU. \\n… #> $ actor_avatar      <chr> \"https://cdn.bsky.app/i… #> $ viewer_data       <list> [FALSE, FALSE, \"at://d… #> $ labels_data       <list> [], []"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"retrieve-skeets-get_skeets_authored_by","dir":"Articles","previous_headings":"Blue Sky Users and Skeets","what":"Retrieve Skeets (get_skeets_authored_by)","title":"Basic Usage","text":"fetch skeets specific user, use get_skeets_authored_by function. Note also includes quote skeets reskeets. can also opt parse result setting parse = FALSE, however recommended use default parse option results () tidy tibble. Feeling adventurous? Increase limit explore content.","code":"get_skeets_authored_by(actor = \"benguinaudeau.bsky.social\", parse = TRUE) |>   dplyr::glimpse() #> Rows: 25 #> Columns: 19 #> $ uri           <chr> \"at://did:plc:3ryku2cbgpazo… #> $ cid           <chr> \"bafyreiabtdobd6w4scrbpqkvp… #> $ author_handle <chr> \"beamagistro.bsky.social\", … #> $ author_name   <chr> \"Beatrice Magistro\", \"Johan… #> $ text          <chr> \"Excited to share my latest… #> $ author_data   <list> [\"did:plc:3ryku2cbgpazoryt… #> $ post_data     <list> [\"app.bsky.feed.post\", \"20… #> $ embed_data    <list> [\"app.bsky.embed.images#vi… #> $ reply_count   <int> 0, 1, 4, 0, 0, 4, 0, 1, 9, … #> $ repost_count  <int> 6, 6, 8, 0, 0, 15, 2, 1, 44… #> $ like_count    <int> 12, 20, 12, 0, 1, 43, 6, 1,… #> $ indexed_at    <dttm> 2024-02-16 17:26:58, 2024-… #> $ in_reply_to   <chr> NA, NA, NA, NA, \"at://did:p… #> $ in_reply_root <chr> NA, NA, NA, NA, \"at://did:p… #> $ quotes        <chr> NA, \"at://did:plc:vgvueqvmb… #> $ tags          <list> <NULL>, \"rstats\", \"rstats\"… #> $ mentions      <list> <NULL>, <NULL>, <NULL>, <N… #> $ links         <list> <NULL>, <NULL>, <NULL>, <N… #> $ is_reskeet    <lgl> TRUE, TRUE, TRUE, FALSE, FA… get_skeets_authored_by(actor = \"favstats.bsky.social\", limit = 30) |>   dplyr::glimpse() #> Rows: 30 #> Columns: 19 #> $ uri           <chr> \"at://did:plc:46yyakot3bygh… #> $ cid           <chr> \"bafyreihxsllmosnheuxhl234f… #> $ author_handle <chr> \"favstats.bsky.social\", \"r-… #> $ author_name   <chr> \"Fabio Votta📊🐧 \", \"R-Blog… #> $ text          <chr> \"Made an invitation website… #> $ author_data   <list> [\"did:plc:46yyakot3byghwqc… #> $ post_data     <list> [\"app.bsky.feed.post\", \"20… #> $ embed_data    <list> [\"app.bsky.embed.images#vi… #> $ reply_count   <int> 0, 0, 0, 4, 1, 0, 4, 0, 0, … #> $ repost_count  <int> 1, 1, 0, 0, 6, 3, 8, 8, 3, … #> $ like_count    <int> 5, 5, 2, 13, 20, 3, 12, 23,… #> $ indexed_at    <dttm> 2024-02-20 12:21:11, 2024-… #> $ in_reply_to   <chr> NA, NA, \"at://did:plc:46yya… #> $ in_reply_root <chr> NA, NA, \"at://did:plc:46yya… #> $ quotes        <chr> NA, NA, NA, NA, \"at://did:p… #> $ tags          <list> \"rstats\", <NULL>, <NULL>, … #> $ mentions      <list> <NULL>, <NULL>, <NULL>, <N… #> $ links         <list> <NULL>, <NULL>, <NULL>, <N… #> $ is_reskeet    <lgl> FALSE, TRUE, FALSE, FALSE, …"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"who-liked-your-skeets","dir":"Articles","previous_headings":"Blue Sky Users and Skeets","what":"Who liked your Skeets?","title":"Basic Usage","text":"get_likes function allows extract detailed information users liked specific post. simply providing post’s URL, can get list users expressed appreciation content.","code":"get_likes(\"https://bsky.app/profile/ryanlcooper.com/post/3kb42gayda52t\")  |>   dplyr::glimpse() #> Rows: 25 #> Columns: 5 #> $ created_at   <dttm> 2023-10-06 21:22:39, 2023-1… #> $ indexed_at   <dttm> 2023-10-06 21:22:39, 2023-1… #> $ actor_handle <chr> \"csehested.bsky.social\", \"da… #> $ actor_name   <chr> NA, \"TassieDevyl\", \"Hans LeJ… #> $ actor_data   <list> [\"did:plc:zzsj7hy3wec6fhbwu…"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"who-reposted-your-skeets","dir":"Articles","previous_headings":"Blue Sky Users and Skeets","what":"Who reposted your Skeets?","title":"Basic Usage","text":"Reposts (reskeets), akin retweets platforms like Twitter, amplify reach content sharing wider audience. get_reposts function designed retrieve information users reposted specific piece content.","code":"get_reposts(post_url = \"https://bsky.app/profile/ryanlcooper.com/post/3kb42gayda52t\")  |>   dplyr::glimpse() #> Rows: 25 #> Columns: 8 #> $ did               <chr> \"did:plc:zyvmwfzbkt3igd… #> $ indexed_at        <dttm> 2024-01-26 00:03:39, 2… #> $ actor_handle      <chr> \"zunguzungu.bsky.social… #> $ actor_name        <chr> \"Aaron Bady\", \"Bertie R… #> $ actor_description <chr> \"Meat blood, bees, thin… #> $ actor_avatar      <chr> \"https://cdn.bsky.app/i… #> $ viewer_data       <list> [FALSE, FALSE], [FALSE… #> $ labels_data       <list> [], [], [], [], [], []…"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"exploring-connections-get-followers-and-follows","dir":"Articles","previous_headings":"","what":"Exploring Connections: Get Followers and Follows","title":"Basic Usage","text":"can retrieve list followers followed user get_followers get_follows functions, respectively. gives glimpse social dynamics platform.","code":""},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"get_followers","dir":"Articles","previous_headings":"Exploring Connections: Get Followers and Follows","what":"get_followers","title":"Basic Usage","text":"","code":"get_followers(actor = \"benguinaudeau.bsky.social\", limit = 200)  |>   dplyr::glimpse() #> Rows: 200 #> Columns: 8 #> $ did               <chr> \"did:plc:nol67uyam6hzj5… #> $ indexed_at        <dttm> 2024-02-29 13:50:12, 2… #> $ actor_handle      <chr> \"dkarpa.bsky.social\", \"… #> $ actor_name        <chr> \"David Karpa\", \"Rémi Pa… #> $ actor_description <chr> \"PhD-candidate UBremen.… #> $ actor_avatar      <chr> \"https://cdn.bsky.app/i… #> $ viewer_data       <list> [FALSE, FALSE], [FALSE… #> $ labels_data       <list> [], [], [], [], [], []…"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"get_follows","dir":"Articles","previous_headings":"Exploring Connections: Get Followers and Follows","what":"get_follows","title":"Basic Usage","text":"’ll notice follower/following description (.e. bio). ’s nifty way get know bit glance!","code":"atrrr:::get_follows(actor = \"benguinaudeau.bsky.social\", limit = 200)  |>   dplyr::glimpse() #> Rows: 174 #> Columns: 8 #> $ did               <chr> \"did:plc:3ryku2cbgpazor… #> $ indexed_at        <dttm> 2024-02-08 05:16:04, 2… #> $ actor_handle      <chr> \"beamagistro.bsky.socia… #> $ actor_name        <chr> \"Beatrice Magistro\", \"S… #> $ actor_description <chr> \"PostDoc @Caltech, thru… #> $ actor_avatar      <chr> \"https://cdn.bsky.app/i… #> $ viewer_data       <list> [FALSE, FALSE], [FALSE… #> $ labels_data       <list> [], [], [], [], [], []…"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"follower-network-visualization","dir":"Articles","previous_headings":"Exploring Connections: Get Followers and Follows","what":"Follower Network Visualization","title":"Basic Usage","text":"section guides process visualizing follower network given user Blue Sky. primary focus “skeets” (posts) interconnected relationships among followers. first step load additional packages. get followers main user interested . delve deeper fetch followers followers.","code":"library(ggplot2) library(dplyr) library(purrr) library(tidyr) library(igraph) library(ggraph) library(tidygraph)  # Retrieve the followers for the main user some_followers <- get_followers(actor = \"benguinaudeau.bsky.social\", limit = 10)$actor_handle  # For each follower, retrieve their own set of followers. # This provides a nested view of relationships. followers_of_followers <- some_followers |>   purrr::map_dfr(~{     get_followers(actor = .x, limit = 200) |>     mutate(from = .x)   }) |>   dplyr::rename(to = actor_handle) |>   dplyr::select(from, to)"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"building-and-visualizing-the-follower-network","dir":"Articles","previous_headings":"Exploring Connections: Get Followers and Follows","what":"Building and Visualizing the Follower Network","title":"Basic Usage","text":"Follower Network","code":"# Construct the network graph and plot graph <- igraph::graph_from_data_frame(followers_of_followers, directed = TRUE)  # Use ggraph to visualize the network. ggraph::ggraph(graph, layout = \"kk\") +   ggraph::geom_edge_link() +   ggraph::geom_node_point(aes(size = tidygraph::centrality_pagerank())) +   ggplot2::theme_void()"},{"path":"https://jbgruber.github.io/atrrr/articles/Basic_Usage.html","id":"find-people-to-follow","dir":"Articles","previous_headings":"Exploring Connections: Get Followers and Follows","what":"Find people to follow","title":"Basic Usage","text":"can use similar approach find new people might want follow. First get people already follow quering account: original account shows overview, accounts excluded limit set demonstration. accounts look intresting!","code":"my_follows <- get_follows(actor = \"jbgruber.bsky.social\",                               limit = 10)$actor_handle # limit only for demonstration  # For each account you follow, retrieve who they follow. follows_of_follows <- my_follows |>   purrr::map_dfr(~{     get_followers(actor = .x, limit = 100) |>       mutate(from = .x)   })  # Now we can check which accounts are popular among the people you already follow follows_of_follows |>   dplyr::filter(!actor_handle %in% my_follows) |> # exclude accounts you already follow   dplyr::count(actor_name, actor_handle, sort = TRUE) #> # A tibble: 704 × 3 #>    actor_name                actor_handle         n #>    <chr>                     <chr>            <int> #>  1 Johannes B. Gruber        jbgruber.bsky.s…     9 #>  2 Center for Ballot Freedom fusionvoting.bs…     4 #>  3 David Karpa               dkarpa.bsky.soc…     3 #>  4 Jacob Ware                jacobware.bsky.…     3 #>  5 Jens Rydgren              jensrydgren.bsk…     3 #>  6 edminkardes               gorkem.me            3 #>  7 Adrian Florea             aflorea.bsky.so…     2 #>  8 Brian O'Meara             omearabrian.bsk…     2 #>  9 Darren Dahly              statsepi.bsky.s…     2 #> 10 Erik Angner               erikangner.com       2 #> # ℹ 694 more rows"},{"path":"https://jbgruber.github.io/atrrr/articles/Feed_Analysis.html","id":"analyzing-feeds-on-blue-sky","dir":"Articles","previous_headings":"","what":"Analyzing Feeds on Blue Sky","title":"Feed Analysis","text":"Blue Sky users ability create custom feeds based specific keywords. feeds aggregate content, instance, user might create feed around hashtag #rstats gather relevant content . Let’s delve dynamics feeds created users.","code":""},{"path":"https://jbgruber.github.io/atrrr/articles/Feed_Analysis.html","id":"load-the-package","dir":"Articles","previous_headings":"Analyzing Feeds on Blue Sky","what":"Load the package","title":"Feed Analysis","text":"","code":"library(atrrr)"},{"path":"https://jbgruber.github.io/atrrr/articles/Feed_Analysis.html","id":"retrieving-a-feed","dir":"Articles","previous_headings":"Analyzing Feeds on Blue Sky","what":"Retrieving a Feed","title":"Feed Analysis","text":"starting point extract posts feed. ’re focusing feed curated “andrew.heiss.phd”.","code":"# Fetching the feed posts feeds <- get_feeds_created_by(actor = \"andrew.heiss.phd\") |>   dplyr::glimpse() #> Rows: 4 #> Columns: 20 #> $ uri                       <chr> \"at://did:plc:2… #> $ cid                       <chr> \"bafyreidmykchh… #> $ did                       <chr> \"did:web:skyfee… #> $ creator_did               <chr> \"did:plc:2zcfjz… #> $ creator_handle            <chr> \"andrew.heiss.p… #> $ creator_displayName       <chr> \"Andrew Heiss\",… #> $ creator_avatar            <chr> \"https://cdn.bs… #> $ creator_viewer_muted      <lgl> FALSE, FALSE, F… #> $ creator_viewer_blockedBy  <lgl> FALSE, FALSE, F… #> $ creator_viewer_following  <chr> \"at://did:plc:n… #> $ creator_viewer_followedBy <chr> \"at://did:plc:2… #> $ creator_description       <chr> \"Assistant prof… #> $ creator_indexedAt         <chr> \"2024-01-26T00:… #> $ displayName               <chr> \"Nonprofit Stud… #> $ description               <chr> \"A feed for non… #> $ avatar                    <chr> \"https://cdn.bs… #> $ likeCount                 <int> 20, 81, 0, 102 #> $ indexedAt                 <chr> \"2023-09-20T21:… #> $ created_at                <dttm> 2023-09-20 21:1… #> $ viewer_like               <chr> NA, NA, NA, \"a…  # Filtering for a specific keyword, for example \"#rstats\" rstat_feed <- feeds |>   filter(displayName == \"#rstats\")  # Extracting posts from this curated feed rstat_posts <- get_feed(rstat_feed$uri, limit = 200) |>   dplyr::glimpse() #> Rows: 200 #> Columns: 18 #> $ uri           <chr> \"at://did:plc:vgvueqvmbqgoy… #> $ cid           <chr> \"bafyreie2uewopzpmtxwil3a5p… #> $ author_handle <chr> \"cranberriesfeed.bsky.socia… #> $ author_name   <chr> \"CRAN Package Updates Bot\",… #> $ text          <chr> \"CRAN updates: lava MissMec… #> $ author_data   <list> [\"did:plc:vgvueqvmbqgoyxtc… #> $ post_data     <list> [\"app.bsky.feed.post\", \"20… #> $ embed_data    <list> <NULL>, <NULL>, [\"app.bsky… #> $ reply_count   <int> 0, 0, 0, 0, 0, 0, 0, 0, 2, … #> $ repost_count  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ like_count    <int> 0, 0, 0, 0, 0, 0, 0, 0, 6, … #> $ indexed_at    <dttm> 2024-03-05 13:02:18, 2024-… #> $ in_reply_to   <chr> NA, NA, NA, NA, NA, NA, NA,… #> $ in_reply_root <chr> NA, NA, NA, NA, NA, NA, NA,… #> $ quotes        <chr> NA, NA, NA, NA, NA, NA, NA,… #> $ tags          <list> \"rstats\", \"rstats\", \"rstat… #> $ mentions      <list> <NULL>, <NULL>, <NULL>, <N… #> $ links         <list> <NULL>, <NULL>, <NULL>, <N…"},{"path":"https://jbgruber.github.io/atrrr/articles/Feed_Analysis.html","id":"identifying-top-contributors","dir":"Articles","previous_headings":"Analyzing Feeds on Blue Sky","what":"Identifying Top Contributors","title":"Feed Analysis","text":"leading voices within particular topic? analysis highlights users frequently contributing #rstats feed. Top 10 #rstats contributors","code":"library(ggplot2)  # Identifying the top 10 contributors rstat_posts |>   count(handle = author_handle, sort = T) |>   slice(1:10) |>   mutate(handle = forcats::fct_reorder(handle, n)) |>   ggplot(aes(handle, n)) +   geom_col() +   coord_flip() +   theme_minimal()"},{"path":"https://jbgruber.github.io/atrrr/articles/Feed_Analysis.html","id":"recognizing-influential-voices","dir":"Articles","previous_headings":"Analyzing Feeds on Blue Sky > Identifying Top Contributors","what":"Recognizing Influential Voices","title":"Feed Analysis","text":"Volume doesn’t always translate influence. users may post less frequently contributions resonate deeply community. Top 10 #rstats contributors based likes","code":"# Identifying top 10 influential voices based on likes rstat_posts |>   group_by(author_handle) |>   summarize(like_count = sum(like_count)) |>   ungroup() |>   arrange(desc(like_count)) |>   slice(1:10) |>   mutate(handle = forcats::fct_reorder(author_handle, like_count)) |>   ggplot(aes(handle, like_count)) +   geom_col() +   coord_flip() +   theme_minimal()"},{"path":"https://jbgruber.github.io/atrrr/articles/Feed_Analysis.html","id":"most-famous-rstats-skeet","dir":"Articles","previous_headings":"Analyzing Feeds on Blue Sky > Identifying Top Contributors","what":"Most Famous #rstats skeet","title":"Feed Analysis","text":"","code":"# Finding the standout post in the rstats feed rstat_posts |>   mutate(total_interactions = reply_count + repost_count + like_count) |>   arrange(desc(total_interactions)) |>   slice(1) |>   select(author_handle, total_interactions, text) |>   dplyr::glimpse() |>   pull(text) #> Rows: 1 #> Columns: 3 #> $ author_handle      <chr> \"omearabrian.bsky.soci… #> $ total_interactions <int> 42 #> $ text               <chr> \"New paper! \\\"dentist:… #> [1] \"New paper! \\\"dentist: Quantifying uncertainty by sampling points around maximum likelihood estimates\\\". Easy thing to plug into R workflows for getting better confidence intervals and detecting potential identifiability issues. #OpenAccess paper at doi.org/10.1111/2041...\\n\\n#Rstats #OpenSource\""},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"interacting-with-blue-sky-posts-replies-and-deletions","dir":"Articles","previous_headings":"","what":"Interacting with Blue Sky: Posts, Replies, and Deletions","title":"Interaction with Platform","text":"section, cover interact Blue Sky platform creating posts (skeets), replying , eventually, necessary, deleting .","code":""},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"load-the-package","dir":"Articles","previous_headings":"Interacting with Blue Sky: Posts, Replies, and Deletions","what":"Load the package","title":"Interaction with Platform","text":"","code":"library(atrrr)"},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"posting-a-skeet","dir":"Articles","previous_headings":"Interacting with Blue Sky: Posts, Replies, and Deletions","what":"Posting a Skeet","title":"Interaction with Platform","text":"’s can easily post skeet account: running command, ’ve successfully created skeet content “Posting around.”","code":"post <- post_skeet(text = \"Posting around\")"},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"replying-to-a-skeet","dir":"Articles","previous_headings":"Interacting with Blue Sky: Posts, Replies, and Deletions","what":"Replying to a Skeet","title":"Interaction with Platform","text":"Engaging Blue Sky community often means replying existing skeets. ’s can craft reply: Notice in_reply_to parameter? ensures reply linked original post, creating thread conversation. don’t URI skeet, link also .","code":"reply <- post_skeet(text = \"Replying around\", in_reply_to = post$uri)"},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"deleting-a-skeet","dir":"Articles","previous_headings":"Interacting with Blue Sky: Posts, Replies, and Deletions","what":"Deleting a Skeet","title":"Interaction with Platform","text":"Whether ’s correct error, remove outdated information, reason, sometimes might want delete skeet. ’s :","code":"delete_skeet(post_url = reply$uri)"},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"crafting-threads-in-blue-sky","dir":"Articles","previous_headings":"Interacting with Blue Sky: Posts, Replies, and Deletions","what":"Crafting Threads in Blue Sky","title":"Interaction with Platform","text":"Threads series connected posts “skeets” Blue Sky. ’re great way communicate longer ideas stories, skeet builds previous one. section, ’ll explore create thread seamlessly. thread essentially series individual skeets. ’s can programmatically using post_thread:","code":"post_thread(texts = c(\"This is the first amazing skeet.\",                       \"Now I am expanding upon my skeet!\",                       \"Conclusion: I skeet therefore I am.\"))"},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"following-and-unfollowing-users-in-blue-sky","dir":"Articles","previous_headings":"Interacting with Blue Sky: Posts, Replies, and Deletions","what":"Following and Unfollowing Users in Blue Sky","title":"Interaction with Platform","text":"One fundamental ways connect users following , allowing see posts feed. Conversely, decide longer want see updates particular user, can unfollow .","code":"# Follow a user by their handle follow(actor = \"benguinaudeau.bsky.social\")"},{"path":"https://jbgruber.github.io/atrrr/articles/Interactions.html","id":"support-for-posting-media","dir":"Articles","previous_headings":"Interacting with Blue Sky: Posts, Replies, and Deletions","what":"Support for posting media","title":"Interaction with Platform","text":"Media can posted using path file. can also included thread. First let’s create plots want send: Now post pictures thread:","code":"# make a basic plot plot <- ggplot(mpg, aes(displ, hwy, colour = class)) +   geom_point()  # save it to a file f1 <- ggsave(filename = tempfile(pattern = \"1\", fileext = \".png\"), plot = plot)  # a second basic plot lty <- c(\"solid\", \"dashed\", \"dotted\", \"dotdash\", \"longdash\", \"twodash\") linetypes <- data.frame(   y = seq_along(lty),   lty = lty ) plot2 <- ggplot(linetypes, aes(0, y)) +   geom_segment(aes(xend = 5, yend = y, linetype = lty)) +   scale_linetype_identity() +   geom_text(aes(label = lty), hjust = 0, nudge_y = 0.2) +   scale_x_continuous(NULL, breaks = NULL) +   scale_y_reverse(NULL, breaks = NULL)  # again we save it to a temporary file f2 <- ggsave(tempfile(pattern = \"2\", fileext = \".png\"), plot = plot2) post_thread(texts = c(\"This is the first plot on the ggplot2 website\",                       \"This is the second plot on the ggplot2 website\",                       \"And this is just text sent from the atrrr package by @jbgruber.bsky.social, @benguinaudeau.bsky.social and @favstats.bsky.social\"),             images = c(f1, f2, \"\"),             image_alts = c(\"first ggplot2 plot\",                            \"second ggplot2 plot\",                            \"\"))"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"get-followers-and-follows","dir":"Articles","previous_headings":"","what":"Get Followers and Follows","title":"Networks","text":"can retrieve list followers followed user get_followers get_follows functions, respectively. gives glimpse social dynamics platform.","code":""},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"load-the-package","dir":"Articles","previous_headings":"Get Followers and Follows","what":"Load the package","title":"Networks","text":"","code":"library(atrrr)"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"get_followers","dir":"Articles","previous_headings":"Get Followers and Follows","what":"get_followers","title":"Networks","text":"Retrieve followers specific account get_followers:","code":"get_followers(actor = \"benguinaudeau.bsky.social\", limit = 200)  |>   dplyr::glimpse() #> Rows: 200 #> Columns: 8 #> $ did               <chr> \"did:plc:nol67uyam6hzj5… #> $ indexed_at        <dttm> 2024-02-29 13:50:12, 2… #> $ actor_handle      <chr> \"dkarpa.bsky.social\", \"… #> $ actor_name        <chr> \"David Karpa\", \"Rémi Pa… #> $ actor_description <chr> \"PhD-candidate UBremen.… #> $ actor_avatar      <chr> \"https://cdn.bsky.app/i… #> $ viewer_data       <list> [FALSE, FALSE], [FALSE… #> $ labels_data       <list> [], [], [], [], [], []…"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"get_follows","dir":"Articles","previous_headings":"Get Followers and Follows","what":"get_follows","title":"Networks","text":"Retrieve accounts followed specific account get_follows: ’ll notice follower/following description (.e. bio). ’s nifty way get know bit glance!","code":"get_follows(actor = \"benguinaudeau.bsky.social\", limit = 200)  |>   dplyr::glimpse() #> Rows: 174 #> Columns: 8 #> $ did               <chr> \"did:plc:3ryku2cbgpazor… #> $ indexed_at        <dttm> 2024-02-08 05:16:04, 2… #> $ actor_handle      <chr> \"beamagistro.bsky.socia… #> $ actor_name        <chr> \"Beatrice Magistro\", \"S… #> $ actor_description <chr> \"PostDoc @Caltech, thru… #> $ actor_avatar      <chr> \"https://cdn.bsky.app/i… #> $ viewer_data       <list> [FALSE, FALSE], [FALSE… #> $ labels_data       <list> [], [], [], [], [], []…"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"follower-network-visualization","dir":"Articles","previous_headings":"Get Followers and Follows","what":"Follower Network Visualization","title":"Networks","text":"section guides process visualizing follower network given user Blue Sky. primary focus interconnected relationships among followers. first step load additional packages. get followers main user interested . delve deeper fetch followers followers.","code":"library(ggplot2) library(dplyr) library(purrr) library(tidyr) library(igraph) library(ggraph) library(tidygraph)  # Retrieve the followers for the main user some_followers <- get_followers(actor = \"benguinaudeau.bsky.social\", limit = 10)$actor_handle  # For each follower, retrieve their own set of followers. # This provides a nested view of relationships. followers_of_followers <- some_followers |>   purrr::map_dfr(~{     get_followers(actor = .x, limit = 200) |>     mutate(from = .x)   }) |>   dplyr::rename(to = actor_handle) |>   dplyr::select(from, to) %>%   dplyr::add_count(to, name = \"n_to\") %>%   dplyr::add_count(from, name = \"n_from\") %>%   dplyr::filter(n_to > 1 | n_from > 1) %>%   dplyr::select(-n_to:-n_from)"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"building-and-visualizing-the-follower-network","dir":"Articles","previous_headings":"Get Followers and Follows","what":"Building and Visualizing the Follower Network","title":"Networks","text":"Follower Network","code":"# Construct the network graph and plot graph <- tidygraph::as_tbl_graph(followers_of_followers, directed = TRUE)  # Use ggraph to visualize the network. ggraph::ggraph(graph, layout = 'fr') +   ggraph::geom_edge_link() +   ggraph::geom_node_point(aes(size = tidygraph::centrality_pagerank()), color = \"lightblue\") +   ggraph::geom_node_text(aes(label = name, size = tidygraph::centrality_pagerank(), family = \"mono\", fontface = \"bold\"),                    vjust = 1, hjust = 1, check_overlap = T, color = \"white\", show.legend = F) +   ggraph::geom_node_text(aes(label = name, size = tidygraph::centrality_pagerank(), family = \"mono\"),                    vjust = 1, hjust = 1, check_overlap = T, color = \"blue\", show.legend = F) +   ggplot2::theme_void() +   ggplot2::theme(legend.position = \"bottom\")"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"find-people-to-follow","dir":"Articles","previous_headings":"Get Followers and Follows","what":"Find people to follow","title":"Networks","text":"can use similar approach find new people might want follow. First get people already follow quering account: original account shows overview, accounts excluded limit set demonstration. accounts look interesting!","code":"my_follows <- get_follows(actor = \"jbgruber.bsky.social\",                               limit = 10)$actor_handle # limit only for demonstration  # For each account you follow, retrieve who they follow. follows_of_follows <- my_follows |>   purrr::map_dfr(~{     get_followers(actor = .x, limit = 100) |>       mutate(from = .x)   })  # Now we can check which accounts are popular among the people you already follow follows_of_follows |>   dplyr::filter(!actor_handle %in% my_follows) |> # exclude accounts you already follow   dplyr::count(actor_name, actor_handle, sort = TRUE) #> # A tibble: 704 × 3 #>    actor_name                actor_handle         n #>    <chr>                     <chr>            <int> #>  1 Johannes B. Gruber        jbgruber.bsky.s…     9 #>  2 Center for Ballot Freedom fusionvoting.bs…     4 #>  3 David Karpa               dkarpa.bsky.soc…     3 #>  4 Jacob Ware                jacobware.bsky.…     3 #>  5 Jens Rydgren              jensrydgren.bsk…     3 #>  6 edminkardes               gorkem.me            3 #>  7 Adrian Florea             aflorea.bsky.so…     2 #>  8 Brian O'Meara             omearabrian.bsk…     2 #>  9 Darren Dahly              statsepi.bsky.s…     2 #> 10 Erik Angner               erikangner.com       2 #> # ℹ 694 more rows"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"likes-and-reposts","dir":"Articles","previous_headings":"","what":"Likes and Reposts","title":"Networks","text":"can also retrieve accounts liked reposted skeets.","code":""},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"who-liked-your-skeets","dir":"Articles","previous_headings":"Likes and Reposts","what":"Who liked your skeets?","title":"Networks","text":"Want create like networks? get_likes function allows extract information users liked specific post. simply providing post’s URL, can get list users expressed appreciation content.","code":"get_likes(\"https://bsky.app/profile/ryanlcooper.com/post/3kb42gayda52t\")  |>   dplyr::glimpse() #> Rows: 25 #> Columns: 5 #> $ created_at   <dttm> 2023-10-06 21:22:39, 2023-1… #> $ indexed_at   <dttm> 2023-10-06 21:22:39, 2023-1… #> $ actor_handle <chr> \"csehested.bsky.social\", \"da… #> $ actor_name   <chr> NA, \"TassieDevyl\", \"Hans LeJ… #> $ actor_data   <list> [\"did:plc:zzsj7hy3wec6fhbwu…"},{"path":"https://jbgruber.github.io/atrrr/articles/Networks.html","id":"who-reposted-your-skeets","dir":"Articles","previous_headings":"Likes and Reposts","what":"Who reposted your skeets?","title":"Networks","text":"Want create repost networks? Reposts (reskeets), akin retweets platforms like Twitter, amplify reach content sharing wider audience. get_reposts function designed retrieve information users reposted specific piece content.","code":"get_reposts(post_url = \"https://bsky.app/profile/ryanlcooper.com/post/3kb42gayda52t\")  |>   dplyr::glimpse() #> Rows: 25 #> Columns: 8 #> $ did               <chr> \"did:plc:zyvmwfzbkt3igd… #> $ indexed_at        <dttm> 2024-01-26 00:03:39, 2… #> $ actor_handle      <chr> \"zunguzungu.bsky.social… #> $ actor_name        <chr> \"Aaron Bady\", \"Bertie R… #> $ actor_description <chr> \"Meat blood, bees, thin… #> $ actor_avatar      <chr> \"https://cdn.bsky.app/i… #> $ viewer_data       <list> [FALSE, FALSE], [FALSE… #> $ labels_data       <list> [], [], [], [], [], []…"},{"path":"https://jbgruber.github.io/atrrr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Johannes B. Gruber. Author, maintainer. Benjamin Guinaudeau. Author, contributor. Fabio Votta. Author, contributor.","code":""},{"path":"https://jbgruber.github.io/atrrr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gruber J, Guinaudeau B, Votta F (2024). atrrr: Wrapper '' Protocol Behind 'Bluesky'. R package version 0.0.3, https://github.com/JBGruber/atrrr, https://jbgruber.github.io/atrrr/.","code":"@Manual{,   title = {atrrr: Wrapper for the 'AT' Protocol Behind 'Bluesky'},   author = {Johannes B. Gruber and Benjamin Guinaudeau and Fabio Votta},   year = {2024},   note = {R package version 0.0.3, https://github.com/JBGruber/atrrr},   url = {https://jbgruber.github.io/atrrr/}, }"},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"atrrr-","dir":"","previous_headings":"","what":"Wrapper for the AT Protocol Behind Bluesky","title":"Wrapper for the AT Protocol Behind Bluesky","text":"goal atrrr1 wrap Protocol (Authenticated Transfer Protocol) behind Bluesky. actually already fulfilled goal!. entire protocol open documented -called lexicons, autogenerated R functions. exported, however, since dealing bit advanced. Rather nice human-generated functions documentation examples.","code":""},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Wrapper for the AT Protocol Behind Bluesky","text":"can install development version atrrr like (install remotes package first, install.packages(\"remotes\"), don’t yet):","code":"# install.packages(\"remotes\") remotes::install_github(\"JBGruber/atrrr\")"},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"load-the-package","dir":"","previous_headings":"","what":"Load the package","title":"Wrapper for the AT Protocol Behind Bluesky","text":"","code":"library(atrrr)"},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Wrapper for the AT Protocol Behind Bluesky","text":"first time make request, prompted automatically enter user handle app password authenticate atrrr communicate BlueSky . RStudio Popup page generate app passwords also automatically opened . page create new app passwords However, can also trigger process manually: can useful want replace old token permanently stored encrypted disk.","code":"auth(\"jbgruber.bsky.social\")"},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"retrieve-skeets-get_skeets_authored_by","dir":"","previous_headings":"","what":"Retrieve Skeets (get_skeets_authored_by)","title":"Wrapper for the AT Protocol Behind Bluesky","text":"fetch skeets specific user, use get_skeets_authored_by function. Note also includes quote skeets reskeets. can also opt parse result setting parse = FALSE, however recommended use default parse option results () tidy tibble.","code":"get_skeets_authored_by(actor = \"benguinaudeau.bsky.social\", parse = TRUE) |>   dplyr::glimpse() #> Rows: 25 #> Columns: 19 #> $ uri           <chr> \"at://did:plc:3ryku2cbgpazorytvt6lt273/app.bsky.feed.pos… #> $ cid           <chr> \"bafyreiabtdobd6w4scrbpqkvpgvdwidmdo7gyj6vvvcayol2drjalw… #> $ author_handle <chr> \"beamagistro.bsky.social\", \"jbgruber.bsky.social\", \"jbgr… #> $ author_name   <chr> \"Beatrice Magistro\", \"Johannes B. Gruber\", \"Johannes B. … #> $ text          <chr> \"Excited to share my latest paper out at PSRM\\n \\\"Attitu… #> $ author_data   <list> [\"did:plc:3ryku2cbgpazorytvt6lt273\", \"beamagistro.bsky.… #> $ post_data     <list> [\"app.bsky.feed.post\", \"2024-02-16T17:26:58.396Z\", [\"ap… #> $ embed_data    <list> [\"app.bsky.embed.images#view\", [[\"https://cdn.bsky.app/… #> $ reply_count   <int> 0, 1, 4, 0, 0, 4, 0, 1, 9, 0, 1, 0, 1, 0, 0, 0, 0, 1, 12… #> $ repost_count  <int> 6, 6, 8, 0, 0, 15, 2, 1, 440, 3, 1, 5, 28, 0, 0, 0, 0, 0… #> $ like_count    <int> 12, 20, 12, 0, 1, 43, 6, 1, 618, 7, 3, 10, 35, 0, 0, 1, … #> $ indexed_at    <dttm> 2024-02-16 17:26:58, 2024-01-10 15:23:18, 2024-01-04 16… #> $ in_reply_to   <chr> NA, NA, NA, NA, \"at://did:plc:eotrvt2wp6mqooxjf3bzklwa/a… #> $ in_reply_root <chr> NA, NA, NA, NA, \"at://did:plc:eotrvt2wp6mqooxjf3bzklwa/a… #> $ quotes        <chr> NA, \"at://did:plc:vgvueqvmbqgoyxtcdebqdcgb/app.bsky.feed… #> $ tags          <list> <NULL>, \"rstats\", \"rstats\", <NULL>, <NULL>, <NULL>, <NU… #> $ mentions      <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>,… #> $ links         <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>,… #> $ is_reskeet    <lgl> TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE,…"},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"analyzing-feeds-on-blue-sky","dir":"","previous_headings":"","what":"Analyzing Feeds on Blue Sky","title":"Wrapper for the AT Protocol Behind Bluesky","text":"Blue Sky users ability create custom feeds based specific keywords. feeds aggregate content, instance, user might curate feed around hashtag #rstats gather relevant content . Let’s delve dynamics feeds. starting point extract posts #rstats feed created “andrew.heiss.phd”.","code":"# Fetching the feed posts feeds <- get_feeds_created_by(actor = \"andrew.heiss.phd\")   # Filtering for a specific keyword, for example \"#rstats\" rstat_feed <- feeds |>   filter(displayName == \"#rstats\")  # Extracting posts from this curated feed rstat_posts <- get_feed(rstat_feed$uri, limit = 200) |>   dplyr::glimpse() #> Rows: 200 #> Columns: 18 #> $ uri           <chr> \"at://did:plc:vgvueqvmbqgoyxtcdebqdcgb/app.bsky.feed.pos… #> $ cid           <chr> \"bafyreifard344uolete7a4vhogz3ja67k6bxumijc6fsuocapqutgt… #> $ author_handle <chr> \"cranberriesfeed.bsky.social\", \"cranberriesfeed.bsky.soc… #> $ author_name   <chr> \"CRAN Package Updates Bot\", \"CRAN Package Updates Bot\", … #> $ text          <chr> \"CRAN updates: minSNPs qris rgl SARP.compo #rstats\\n\", \"… #> $ author_data   <list> [\"did:plc:vgvueqvmbqgoyxtcdebqdcgb\", \"cranberriesfeed.b… #> $ post_data     <list> [\"app.bsky.feed.post\", \"2024-03-05T09:02:16-06:00\", [[[… #> $ embed_data    <list> <NULL>, <NULL>, [\"app.bsky.embed.record#view\", [\"app.bs… #> $ reply_count   <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0,… #> $ repost_count  <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0,… #> $ like_count    <int> 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 23, 3, 0, 0, 0, 0, 0, 0… #> $ indexed_at    <dttm> 2024-03-05 15:02:16, 2024-03-05 14:02:11, 2024-03-05 13… #> $ in_reply_to   <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ in_reply_root <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, … #> $ quotes        <chr> NA, NA, \"at://did:plc:iqrcfhxwrm5tyf7vqhnfgv6j/app.bsky.… #> $ tags          <list> \"rstats\", \"rstats\", \"rstats\", \"rstats\", \"rstats\", \"rsta… #> $ mentions      <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>,… #> $ links         <list> <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>, <NULL>,…"},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"learn-more","dir":"","previous_headings":"","what":"Learn More?","title":"Wrapper for the AT Protocol Behind Bluesky","text":"Start Basic Usage vignette learn .","code":""},{"path":"https://jbgruber.github.io/atrrr/index.html","id":"want-to-help","dir":"","previous_headings":"","what":"Want to help?","title":"Wrapper for the AT Protocol Behind Bluesky","text":"can help creating issue requesting new features reporting bugs. developer, happy accept pull requests. fairly straightforward, endpoints already covered automatically generated function. example, endpoint app.bsky.actor.getProfiles accessible via atrrr:::app_bsky_actor_get_profiles(). function get_user_info() just thin wrapper around calls optional parsing function: find endpoint https://docs.bsky.app/docs/category/http-reference interests , can write similar wrapper contribute package (build something new top ). please open issue first, don’t duplicated work.","code":"get_user_info <- function(actor,                           parse = TRUE,                           .token = NULL) {    # we need to use do.call so objects are passed to the right environment   res <- do.call(      what = app_bsky_actor_get_profiles,     args = list(       actor,       .token = .token, # tokens are handled automatically under the hood       .return = \"json\"     )) |>     purrr::pluck(\"profiles\")    if (parse) {     res <- parse_actors(res)   }   return(res) }"},{"path":"https://jbgruber.github.io/atrrr/reference/atrrr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"atrrr: Wrapper for the 'AT' Protocol Behind 'Bluesky' — atrrr-package","title":"atrrr: Wrapper for the 'AT' Protocol Behind 'Bluesky' — atrrr-package","text":"goal atrrr wrap Protocol (Authenticated Transfer Protocol) behind Bluesky.","code":""},{"path":[]},{"path":"https://jbgruber.github.io/atrrr/reference/atrrr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"atrrr: Wrapper for the 'AT' Protocol Behind 'Bluesky' — atrrr-package","text":"Maintainer: Johannes B. Gruber JohannesB.Gruber@gmail.com (ORCID) Authors: Benjamin Guinaudeau benjamin.guinaudeau@uni-konstanz.de (ORCID) [contributor] Fabio Votta fabio.votta@gmail.com (ORCID) [contributor]","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate for the  API — auth","title":"Authenticate for the  API — auth","text":"Run authentication network using protocol (e.g., 'Blue Sky') save token permanently.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate for the  API — auth","text":"","code":"auth(   user,   password,   domain = \"https://bsky.app/\",   verbose = TRUE,   overwrite = FALSE,   token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate for the  API — auth","text":"user user handle (e.g, benguinaudeau.bsky.social). password app password (usually created https://bsky.app/settings/app-passwords). domain now https://bsky.app/, change future. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). overwrite TRUE, overwrites old token without asking confirmation. token (Stale) token object. Usually need use . manage tokens get stale, can use parameter request fresh token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate for the  API — auth","text":"authentication token (invisible)","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authenticate for the  API — auth","text":"requesting token, saved location returned file.path(tools::R_user_dir(\"atrrr\", \"cache\"), Sys.getenv(\"BSKY_TOKEN\", unset = \"token.rds\")). multiple tokens, can use Sys.setenv(BSKY_TOKEN = \"filename.rds\") save/load token different name.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate for the  API — auth","text":"","code":"if (FALSE) { # request a token auth() # this will guide you through all steps  # the token is stored in the location returned by this command file.path(tools::R_user_dir(\"atrrr\", \"cache\"),           Sys.getenv(\"BSKY_TOKEN\", unset = \"token.rds\"))  # to use a different than the default file name for the token, set BSKY_TOKEN Sys.setenv(BSKY_TOKEN = \"identity-2.rds\")  # now either rename your token file or request a new token auth()  # the cache now contains two tokens list.files(tools::R_user_dir(\"atrrr\", \"cache\"))  # functions that interact with the API also take a .token argument with the # path. For example: tok_path <- file.path(tools::R_user_dir(\"atrrr\", \"cache\"), \"identity-2.rds\") get_skeets_authored_by(actor = \"benguinaudeau.bsky.social\", parse = TRUE,                        .token = tok_path) }"},{"path":"https://jbgruber.github.io/atrrr/reference/convert_http_to_at.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts betweet http URL and AT URI — convert_http_to_at","title":"Converts betweet http URL and AT URI — convert_http_to_at","text":"Converts betweet http URL URI","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/convert_http_to_at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts betweet http URL and AT URI — convert_http_to_at","text":"","code":"convert_http_to_at(link, .token = NULL)  convert_at_to_http(link)"},{"path":"https://jbgruber.github.io/atrrr/reference/convert_http_to_at.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts betweet http URL and AT URI — convert_http_to_at","text":"link either HTTP link. .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/convert_http_to_at.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts betweet http URL and AT URI — convert_http_to_at","text":"either HTTP link","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/convert_http_to_at.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts betweet http URL and AT URI — convert_http_to_at","text":"protocol uses different scheme link posts, useser, feeds etc. Instead common https:// link format, internally links starting :// used (see https://atproto.com/specs/-uri-scheme details). functions convert links HTTP format, way around. useful want use link browser.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/convert_http_to_at.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts betweet http URL and AT URI — convert_http_to_at","text":"","code":"if (FALSE) { convert_http_to_at(\"https://bsky.app/profile/benguinaudeau.bsky.social/post/3kbi5v7oncq25\") convert_at_to_http(\"at://did:plc:vuvsifrusnjsys7mhkpk662u/app.bsky.feed.post/3kbi5v7oncq25\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/follow.html","id":null,"dir":"Reference","previous_headings":"","what":"Un/Follow an account — follow","title":"Un/Follow an account — follow","text":"Un/Follow account","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/follow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Un/Follow an account — follow","text":"","code":"follow(actor, verbose = NULL, .token = NULL)  unfollow(actor, verbose = NULL, .token = NULL)"},{"path":"https://jbgruber.github.io/atrrr/reference/follow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Un/Follow an account — follow","text":"actor User handle follow unfollow verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/follow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Un/Follow an account — follow","text":"list URI CID record (invisible).","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/follow.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Un/Follow an account — follow","text":"can unfollow accounts also followed API/package.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/follow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Un/Follow an account — follow","text":"","code":"if (FALSE) { # follow our test account follow(\"atpr.bsky.social\")  # unfollow our test account unfollow(\"atpr.bsky.social\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the skeets from a specific feed — get_feed","title":"Get the skeets from a specific feed — get_feed","text":"Get skeets shown open given feed","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the skeets from a specific feed — get_feed","text":"","code":"get_feed(   feed_url,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the skeets from a specific feed — get_feed","text":"feed_url url requested feed limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the skeets from a specific feed — get_feed","text":"data frame (nested list) posts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the skeets from a specific feed — get_feed","text":"","code":"if (FALSE) { # use the URL of a feed get_feed(\"https://bsky.app/profile/did:plc:2zcfjzyocp6kapg6jc4eacok/feed/aaaeckvqc3gzg\")  # or search for a feed by name res <- search_feed(\"#rstats\") get_feed(res$uri[1]) }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get likes of a feed — get_feed_likes","title":"Get likes of a feed — get_feed_likes","text":"Get likes feed","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get likes of a feed — get_feed_likes","text":"","code":"get_feed_likes(   feed_url,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get likes of a feed — get_feed_likes","text":"feed_url URL feed retrieve liked . limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get likes of a feed — get_feed_likes","text":"data frame (nested list) likes/reposts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feed_likes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get likes of a feed — get_feed_likes","text":"","code":"if (FALSE) { # use the URL of a feed get_feed_likes(\"https://bsky.app/profile/did:plc:2zcfjzyocp6kapg6jc4eacok/feed/aaaeckvqc3gzg\")  # or search for a feed by name res <- search_feed(\"#rstats\") get_feed_likes(res$uri[1]) }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_feeds_created_by.html","id":null,"dir":"Reference","previous_headings":"","what":"A view of the feed created by an actor. — get_feeds_created_by","title":"A view of the feed created by an actor. — get_feeds_created_by","text":"view feed created actor.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feeds_created_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A view of the feed created by an actor. — get_feeds_created_by","text":"","code":"get_feeds_created_by(   actor,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/get_feeds_created_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A view of the feed created by an actor. — get_feeds_created_by","text":"actor user handle retrieve feed limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feeds_created_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A view of the feed created by an actor. — get_feeds_created_by","text":"data frame (nested list) feeds","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_feeds_created_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A view of the feed created by an actor. — get_feeds_created_by","text":"","code":"if (FALSE) { feed <- get_feeds_created_by(\"profmusgrave.bsky.social\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_followers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get followers and follows of an actor — get_followers","title":"Get followers and follows of an actor — get_followers","text":"Get followers follows actor","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_followers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get followers and follows of an actor — get_followers","text":"","code":"get_followers(   actor,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )  get_follows(   actor,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/get_followers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get followers and follows of an actor — get_followers","text":"actor user handle look followers . limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_followers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get followers and follows of an actor — get_followers","text":"data frame (nested list) found actors.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_followers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get followers and follows of an actor — get_followers","text":"","code":"if (FALSE) { get_followers(\"benguinaudeau.bsky.social\")  # get first page of results follows_df <- get_follows(\"favstats.bsky.social\", limit = 25L)  # continue same search, starting from the next match follows_df2 <- get_follows(\"favstats.bsky.social\", limit = 25L,                            cursor = attr(follows_df, \"last_cursor\")) }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_likes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get likes/reposts of a skeet — get_likes","title":"Get likes/reposts of a skeet — get_likes","text":"Get likes/reposts skeet","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_likes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get likes/reposts of a skeet — get_likes","text":"","code":"get_likes(   post_url,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )  get_reposts(   post_url,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/get_likes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get likes/reposts of a skeet — get_likes","text":"post_url URL skeet retrieve liked/reposted . limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_likes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get likes/reposts of a skeet — get_likes","text":"data frame (nested list) likes/reposts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_likes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get likes/reposts of a skeet — get_likes","text":"","code":"if (FALSE) { get_likes(\"https://bsky.app/profile/jbgruber.bsky.social/post/3kbi55xm6u62v\") get_reposts(\"https://bsky.app/profile/jbgruber.bsky.social/post/3kbi55xm6u62v\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_own_timeline.html","id":null,"dir":"Reference","previous_headings":"","what":"Get your own timeline — get_own_timeline","title":"Get your own timeline — get_own_timeline","text":"Get posts shown open Bluesky app website.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_own_timeline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get your own timeline — get_own_timeline","text":"","code":"get_own_timeline(   algorithm = NULL,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/get_own_timeline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get your own timeline — get_own_timeline","text":"algorithm algorithm used sort posts limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_own_timeline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get your own timeline — get_own_timeline","text":"data frame (nested list) posts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_own_timeline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get your own timeline — get_own_timeline","text":"","code":"if (FALSE) { get_own_timeline() get_own_timeline(algorithm = \"reverse-chronological\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_replies.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all replies — get_replies","title":"Get all replies — get_replies","text":"Get replies replies replies skeet.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_replies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all replies — get_replies","text":"","code":"get_replies(post_url, .token = NULL)"},{"path":"https://jbgruber.github.io/atrrr/reference/get_replies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all replies — get_replies","text":"post_url URL skeet. .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_replies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all replies — get_replies","text":"data frame skeets","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_replies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all replies — get_replies","text":"","code":"if (FALSE) { get_replies(\"https://bsky.app/profile/jbgruber.bsky.social/post/3kbi57u4sys2l\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_skeets_authored_by.html","id":null,"dir":"Reference","previous_headings":"","what":"A view of an actor's skeets. — get_skeets_authored_by","title":"A view of an actor's skeets. — get_skeets_authored_by","text":"view actor's skeets.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_skeets_authored_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A view of an actor's skeets. — get_skeets_authored_by","text":"","code":"get_skeets_authored_by(   actor,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/get_skeets_authored_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A view of an actor's skeets. — get_skeets_authored_by","text":"actor user handle retrieve feed . limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_skeets_authored_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A view of an actor's skeets. — get_skeets_authored_by","text":"data frame (nested list) posts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_skeets_authored_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A view of an actor's skeets. — get_skeets_authored_by","text":"","code":"if (FALSE) { feed <- get_skeets_authored_by(\"profmusgrave.bsky.social\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all skeets in a thread — get_thread","title":"Get all skeets in a thread — get_thread","text":"Retrieve skeets thread (replies original skeet author). matter use original skeet reply post_url.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all skeets in a thread — get_thread","text":"","code":"get_thread(post_url, .token = NULL)"},{"path":"https://jbgruber.github.io/atrrr/reference/get_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all skeets in a thread — get_thread","text":"post_url URL skeet thread. .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_thread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all skeets in a thread — get_thread","text":"data frame skeets","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all skeets in a thread — get_thread","text":"","code":"if (FALSE) { get_thread(\"https://bsky.app/profile/jbgruber.bsky.social/post/3kbi57u4sys2l\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/get_user_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Query profile of an actor — get_user_info","title":"Query profile of an actor — get_user_info","text":"Query profile actor","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_user_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query profile of an actor — get_user_info","text":"","code":"get_user_info(actor, parse = TRUE, .token = NULL)"},{"path":"https://jbgruber.github.io/atrrr/reference/get_user_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query profile of an actor — get_user_info","text":"actor user handle(s) get information . parse Parse results return original nested object sent server. .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_user_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query profile of an actor — get_user_info","text":"data frame (nested list) found actors.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/get_user_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query profile of an actor — get_user_info","text":"","code":"if (FALSE) { rstats_user <- search_user(\"rstats\", limit = 2L) get_user_info(rstats_user$handle) }"},{"path":"https://jbgruber.github.io/atrrr/reference/list_lexicons.html","id":null,"dir":"Reference","previous_headings":"","what":"AT Protocol Lexicons — list_lexicons","title":"AT Protocol Lexicons — list_lexicons","text":"Available lexicons Protocol (Authenticated Transfer Protocol)","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/list_lexicons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AT Protocol Lexicons — list_lexicons","text":"","code":"list_lexicons"},{"path":[]},{"path":"https://jbgruber.github.io/atrrr/reference/list_lexicons.html","id":"list-lexicons","dir":"Reference","previous_headings":"","what":"list_lexicons","title":"AT Protocol Lexicons — list_lexicons","text":"list lexicons available protocols. names Name lexicon values path relative https://github.com/bluesky-social/atproto/tree/main/lexicons","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/list_lexicons.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"AT Protocol Lexicons — list_lexicons","text":"https://github.com/bluesky-social/atproto","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/post.html","id":null,"dir":"Reference","previous_headings":"","what":"Post a skeet — post","title":"Post a skeet — post","text":"Post skeet","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post a skeet — post","text":"","code":"post(   text,   in_reply_to = NULL,   quote = NULL,   image = NULL,   image_alt = NULL,   created_at = Sys.time(),   preview_card = TRUE,   verbose = NULL,   .token = NULL )  post_skeet(   text,   in_reply_to = NULL,   quote = NULL,   image = NULL,   image_alt = NULL,   created_at = Sys.time(),   preview_card = TRUE,   verbose = NULL,   .token = NULL )  delete_skeet(post_url, verbose = NULL, .token = NULL)  delete_post(post_url, verbose = NULL, .token = NULL)"},{"path":"https://jbgruber.github.io/atrrr/reference/post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post a skeet — post","text":"text Text post in_reply_to URL URI skeet reply . quote URL URI skeet quote. image path image post. image_alt alt text image. created_at time stamp post. preview_card display preview card links included text (image NULL). verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token. post_url URL URI post delete.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post a skeet — post","text":"list URI CID post (invisible)","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post a skeet — post","text":"","code":"if (FALSE) { post(\"Hello from #rstats with {atrrr}\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/post_thread.html","id":null,"dir":"Reference","previous_headings":"","what":"Post a thread — post_thread","title":"Post a thread — post_thread","text":"Post thread","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/post_thread.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Post a thread — post_thread","text":"","code":"post_thread(   texts,   images = NULL,   image_alts = NULL,   thread_df = NULL,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/post_thread.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Post a thread — post_thread","text":"texts vector skeet (post) texts images paths images included post image_alts alt texts images included post thread_df instead defining texts, images image_alts, can also create data frame information columns names. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/post_thread.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Post a thread — post_thread","text":"list URIs CIDs posts (invisible)","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/post_thread.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Post a thread — post_thread","text":"","code":"if (FALSE) { # post three messages in a thread thread <- post_thread(c(\"Post 1\", \"Post 2\", \"Post 3\"))  # delete the thread delete_post(thread$uri) }"},{"path":"https://jbgruber.github.io/atrrr/reference/print.bsky_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Print token — print.bsky_token","title":"Print token — print.bsky_token","text":"Print token","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/print.bsky_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print token — print.bsky_token","text":"","code":"# S3 method for bsky_token print(x, ...)"},{"path":"https://jbgruber.github.io/atrrr/reference/print.bsky_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print token — print.bsky_token","text":"x object class bsky_token ... used.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/print.bsky_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print token — print.bsky_token","text":"return value, called print token screen","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_feed.html","id":null,"dir":"Reference","previous_headings":"","what":"Search a specific feed — search_feed","title":"Search a specific feed — search_feed","text":"Search feed named given query","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_feed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search a specific feed — search_feed","text":"","code":"search_feed(   query,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/search_feed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search a specific feed — search_feed","text":"query term searched limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_feed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search a specific feed — search_feed","text":"data frame (nested list) posts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_feed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search a specific feed — search_feed","text":"","code":"if (FALSE) { search_feed(\"rstats\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/search_post.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Posts — search_post","title":"Search Posts — search_post","text":"Search Posts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_post.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Posts — search_post","text":"","code":"search_post(q, limit = 100L, parse = TRUE, verbose = NULL, .token = NULL)  search_skeet(q, limit = 100L, parse = TRUE, verbose = NULL, .token = NULL)"},{"path":"https://jbgruber.github.io/atrrr/reference/search_post.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Posts — search_post","text":"q search query. See Details. limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_post.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search Posts — search_post","text":"data frame (nested list) posts","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_post.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search Posts — search_post","text":"API docs claim Lucene query syntax supported (Boolean operators brackets complex queries). small subset actually implemented: Whitespace treated implicit , words query must occur, word order proximity ignored. Double quotes indicate exact phrases. :<handle> filter results account. - excludes terms (seem working moment). Note matches can occur anywhere skeet, just text. example, term can link preview, alt text image.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_post.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search Posts — search_post","text":"","code":"if (FALSE) { search_post(\"rstats\") # finds post with the hashtag rstats AND the word Bluesky somewhere in the # skeet (ignoring capitalisaion) search_post(\"#rstats Bluesky\")  # search for the exact phrase \"new #rstats package\" search_post(\"\\\"new #rstats package\\\"\") # Use single quotes so you do not need to escape double quotes search_post('\"new #rstats package\"')  # only search for skeets from one user search_post(\"from:jbgruber.bsky.social #rstats\") }"},{"path":"https://jbgruber.github.io/atrrr/reference/search_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Find users (profiles) matching search criteria. — search_user","title":"Find users (profiles) matching search criteria. — search_user","text":"Find users (profiles) matching search criteria.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find users (profiles) matching search criteria. — search_user","text":"","code":"search_user(   query,   limit = 25L,   cursor = NULL,   parse = TRUE,   verbose = NULL,   .token = NULL )"},{"path":"https://jbgruber.github.io/atrrr/reference/search_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find users (profiles) matching search criteria. — search_user","text":"query search query. Searches user names descriptions exact matches user handles (including .bsky.social part). limit Maximum number records return. queries 100 results, pagination used automatically (one request per 100 results). function stops limit reached, usually get items requested. cursor Cursor pagination (pick old search). parse Parse results return original nested object sent server. verbose Whether print status messages Console (TRUE/FALSE). Package default (NULL) status messages. Can changed Sys.setenv(ATR_VERBOSE =   FALSE). .token manage tokens, can supply . Usually NULL OK automatically load guide generate token.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find users (profiles) matching search criteria. — search_user","text":"data frame (nested list) found actors.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/search_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find users (profiles) matching search criteria. — search_user","text":"","code":"if (FALSE) { search_user(\"benguinaudeau.bsky.social\") search_user(\"Blog: favstats.eu\") search_user(\"JBGruber\") search_user(\"@UvA_ASCoR\") search_user(\"rstats\", limit = 1000L) }"},{"path":"https://jbgruber.github.io/atrrr/reference/skeet_shot.html","id":null,"dir":"Reference","previous_headings":"","what":"Take high quality screenshots of skeets — skeet_shot","title":"Take high quality screenshots of skeets — skeet_shot","text":"Take high quality screenshots skeets","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/skeet_shot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take high quality screenshots of skeets — skeet_shot","text":"","code":"skeet_shot(x, file = NULL, ...)"},{"path":"https://jbgruber.github.io/atrrr/reference/skeet_shot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take high quality screenshots of skeets — skeet_shot","text":"x vector URLs URIs. file output file name. Defaults skeet id. ... passed webshot.","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/skeet_shot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take high quality screenshots of skeets — skeet_shot","text":"path file","code":""},{"path":"https://jbgruber.github.io/atrrr/reference/skeet_shot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take high quality screenshots of skeets — skeet_shot","text":"","code":"if (FALSE) { df <- atrrr::search_post(\"rstats\") skeet_shot(df$uri[1:2]) }"},{"path":"https://jbgruber.github.io/atrrr/news/index.html","id":"atrrr-003","dir":"Changelog","previous_headings":"","what":"atrrr 0.0.3","title":"atrrr 0.0.3","text":"link preview cards automatically added posts (can turned ) unified approach parsing actor data new function: skeet_shot (high quality screenshots skeets) properly paginate get_user_info (#14) hashtags can searched included skeets now post_skeet/post now supports ggplot2 objects","code":""},{"path":"https://jbgruber.github.io/atrrr/news/index.html","id":"atrrr-002","dir":"Changelog","previous_headings":"","what":"atrrr 0.0.2","title":"atrrr 0.0.2","text":"CRAN release: 2024-01-10 Initial CRAN submission.","code":""}]
